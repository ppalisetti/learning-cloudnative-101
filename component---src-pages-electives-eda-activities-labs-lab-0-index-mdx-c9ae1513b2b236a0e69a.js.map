{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/electives/eda/activities/labs/lab0/index.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-electives-eda-activities-labs-lab-0-index-mdx-c9ae1513b2b236a0e69a.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Problem`}</h2>\n    <p>{`Produce and consume events to and from an IBM Event Streams on Cloud instance, using NodeJS and Java console samples on Kubernetes/OpenShift cluster.`}</p>\n    <h3>{`Using the NodeJS sample`}</h3>\n    <p>{`To complete this lab scenario, you will need to perform the following steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Make use of the NodeJS project located at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-nodejs-console-sample\"\n        }}>{`https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-nodejs-console-sample`}</a></li>\n      <li parentName=\"ul\">{`Create a lite/free IBM Event Streams instance on IBM Cloud`}</li>\n      <li parentName=\"ul\">{`Create Service Credentials for your IBM Event Streams instance`}</li>\n      <li parentName=\"ul\">{`Create kubernetes secret`}</li>\n      <li parentName=\"ul\">{`Deploy kubernetes pod`}</li>\n      <li parentName=\"ul\">{`Check the logs`}</li>\n    </ul>\n    <h3>{`Use the Java sample`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Make use of the Java project located at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-java-console-sample\"\n        }}>{`https://github.com/ibm-messaging/event-streams-samples/tree/master/kafka-java-console-sample`}</a></li>\n      <li parentName=\"ul\">{`Create a lite/free IBM Event Streams instance on IBM Cloud`}</li>\n      <li parentName=\"ul\">{`Create Service Credentials for your IBM Event Streams instance`}</li>\n      <li parentName=\"ul\">{`Create kubernetes secret`}</li>\n      <li parentName=\"ul\">{`Deploy kubernetes pod`}</li>\n      <li parentName=\"ul\">{`Check the logs`}</li>\n    </ul>\n    <h2>{`Verification`}</h2>\n    <p>{`When you have completed this lab, you will see output similar to the following in your terminal window. The topic name will be specific to the implementation technology that you are using for the given sample.`}</p>\n    <p><strong parentName=\"p\">{`NodeJS`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`Creating the topic kafka-nodejs-console-sample-topic with AdminClient\nAdminClient connected\nThis sample app will run until interrupted.\nThe consumer has connected.\nThe producer has connected.\nNo messages consumed\nMessage produced, partition: 0 offset: 535\nMessage produced, partition: 0 offset: 536\nNo messages consumed\nMessage produced, partition: 0 offset: 537\nMessage consumed: topic=kafka-nodejs-console-sample-topic, partition=0, offset=535, key=Key0, value=This is a test message #0\nMessage consumed: topic=kafka-nodejs-console-sample-topic, partition=0, offset=536, key=Key1, value=This is a test message #1\nMessage consumed: topic=kafka-nodejs-console-sample-topic, partition=0, offset=537, key=Key2, value=This is a test message #2\nMessage produced, partition: 0 offset: 538\nMessage consumed: topic=kafka-nodejs-console-sample-topic, partition=0, offset=538, key=Key3, value=This is a test message #3\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`[2020-04-28 20:44:53,004] INFO Using command line arguments to find credentials. (com.eventstreams.samples.EventStreamsConsoleSample)\n[2020-04-28 20:44:53,005] INFO Kafka Endpoints: broker...cloud.ibm.com:9093 (com.eventstreams.samples.EventStreamsConsoleSample)\n[2020-04-28 20:44:56,639] INFO Creating the topic kafka-java-console-sample-topic (com.eventstreams.samples.EventStreamsConsoleSample)\n[2020-04-28 20:44:59,826] INFO Topic kafka-java-console-sample-topic already exists (com.eventstreams.samples.EventStreamsConsoleSample)\n[2020-04-28 20:45:00,816] INFO [Partition(topic = kafka-java-console-sample-topic, partition = 0, leader = 3, replicas = [3,1,2], isr = [3,2,1], offlineReplicas = [])] (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:00,817] INFO class com.eventstreams.samples.ConsumerRunnable is starting. (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:01,646] INFO [Partition(topic = kafka-java-console-sample-topic, partition = 0, leader = 3, replicas = [3,1,2], isr = [3,2,1], offlineReplicas = [])] (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:01,646] INFO EventStreamsConsoleSample will run until interrupted. (com.eventstreams.samples.EventStreamsConsoleSample)\n[2020-04-28 20:45:01,646] INFO class com.eventstreams.samples.ProducerRunnable is starting. (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:02,590] INFO Message produced, offset: 195 (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:03,819] INFO No messages consumed (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:04,697] INFO Message produced, offset: 196 (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:06,795] INFO Message produced, offset: 197 (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:06,821] INFO No messages consumed (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:07,020] INFO Message consumed: ConsumerRecord(topic = kafka-java-console-sample-topic, partition = 0, leaderEpoch = 56, offset = 197, CreateTime = 1588106706698, serialized key size = 3, serialized value size = 25, headers = RecordHeaders(headers = [], isReadOnly = false), key = key, value = This is a test message #2) (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:08,933] INFO Message produced, offset: 198 (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:08,954] INFO Message consumed: ConsumerRecord(topic = kafka-java-console-sample-topic, partition = 0, leaderEpoch = 56, offset = 198, CreateTime = 1588106708797, serialized key size = 3, serialized value size = 25, headers = RecordHeaders(headers = [], isReadOnly = false), key = key, value = This is a test message #3) (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:11,024] INFO Message consumed: ConsumerRecord(topic = kafka-java-console-sample-topic, partition = 0, leaderEpoch = 56, offset = 199, CreateTime = 1588106710933, serialized key size = 3, serialized value size = 25, headers = RecordHeaders(headers = [], isReadOnly = false), key = key, value = This is a test message #4) (com.eventstreams.samples.ConsumerRunnable)\n[2020-04-28 20:45:11,028] INFO Message produced, offset: 199 (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:13,114] INFO Message produced, offset: 200 (com.eventstreams.samples.ProducerRunnable)\n[2020-04-28 20:45:13,115] INFO Message consumed: ConsumerRecord(topic = kafka-java-console-sample-topic, partition = 0, leaderEpoch = 56, offset = 200, CreateTime = 1588106713028, serialized key size = 3, serialized value size = 25, headers = RecordHeaders(headers = [], isReadOnly = false), key = key, value = This is a test message #5) (com.eventstreams.samples.ConsumerRunnable)\n`}</code></pre>\n    <h2>{`Extra credit`}</h2>\n    <p>{`Using your knowledge of containerization and CI/CD pipelines gained through the bootcamp, construct a pipeline that will build, deploy, and manage these sample applications on a Kubernetes or OpenShift cluster on IBM Cloud.`}</p>\n    <h2>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cloud.ibm.com/docs/EventStreams?topic=eventstreams-getting_started\"\n        }}>{`IBM Event Streams on IBM Cloud - Getting started tutorial`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}